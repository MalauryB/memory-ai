{
  "timestamp": "2025-10-18T06:20:31.995Z",
  "totalIssues": 220,
  "details": {
    "console.log": {
      "count": 78,
      "severity": "WARNING",
      "description": "console.log trouv√©s (debug)",
      "lines": [
        "app/api/daily-plan/route.ts:    console.log(`üìÖ G√©n√©ration planning pour: ${today}${isToday ? ' (aujourd\\'hui)' : ' (jour futur)'}`)",
        "app/api/daily-plan/route.ts:        console.log(`‚ú® Cache HIT pour ${cacheKey}`)",
        "app/api/daily-plan/route.ts:    console.log(`üìä Projets trouv√©s: ${projects.length}`)",
        "app/api/daily-plan/route.ts:      console.log(`   Projets:`, projects.map(p => `${p.title} (${p.status})`).join(', '))",
        "app/api/daily-plan/route.ts:      console.log(\"‚ö†Ô∏è Aucun projet ni activit√© personnalis√©e s√©lectionn√©e\")",
        "app/api/daily-plan/route.ts:    console.log(`üìù Substeps trouv√©es: ${substeps.length}`)",
        "app/api/daily-plan/route.ts:    console.log(`üé® Activit√©s personnalis√©es s√©lectionn√©es: ${customActivities.length}`)",
        "app/api/daily-plan/route.ts:    console.log(`‚úÖ Planning - ${enrichedSubsteps.length} substeps + ${customActivities.length} activit√©s personnalis√©es`)",
        "app/api/daily-plan/route.ts:    console.log(`üéØ Planning g√©n√©r√©: ${dailyPlan.length} t√¢ches au total`)",
        "app/api/daily-plan/route.ts:    console.log(`üíæ Cache STORE pour ${cacheKey}`)"
      ]
    },
    "console.error (API)": {
      "count": 89,
      "severity": "ERROR",
      "description": "console.error dans les routes API (utiliser logger)",
      "lines": [
        "app/api/agenda/route.ts:      console.error(\"Erreur lors de la r√©cup√©ration des √©tapes:\", error)",
        "app/api/agenda/route.ts:    console.error(\"Erreur:\", error)",
        "app/api/ai/stats/route.ts:      console.error('Error fetching user profile:', profileError)",
        "app/api/ai/stats/route.ts:      console.error('Error fetching AI generation stats:', error)",
        "app/api/ai/stats/route.ts:    console.error('Error fetching AI generation stats:', error)",
        "app/api/ai/track-generation/route.ts:      console.error('Error fetching user profile:', profileError)",
        "app/api/ai/track-generation/route.ts:      console.error('Error fetching AI generation stats:', fetchError)",
        "app/api/ai/track-generation/route.ts:        console.error('Error updating AI generation stats:', error)",
        "app/api/ai/track-generation/route.ts:        console.error('Error creating AI generation stats:', error)",
        "app/api/ai/track-generation/route.ts:    console.error('Error tracking AI generation:', error)"
      ]
    },
    "console.warn": {
      "count": 1,
      "severity": "WARNING",
      "description": "console.warn trouv√©s",
      "lines": [
        "app/api/daily-plan/route.ts:    console.warn(`      ‚ö†Ô∏è REJET: Limite de r√©cursion atteinte (${recursionDepth})`)"
      ]
    },
    "TEST_MODE": {
      "count": 52,
      "severity": "ERROR",
      "description": "Flags TEST_MODE trouv√©s",
      "lines": [
        "app/api/agenda/route.ts:    const TEST_MODE = process.env.TEST_MODE_NO_AUTH === \"true\"",
        "app/api/agenda/route.ts:    if (!user && !TEST_MODE) {",
        "app/api/blocked-time-slots/route.ts:    const TEST_MODE = process.env.TEST_MODE_NO_AUTH === \"true\"",
        "app/api/blocked-time-slots/route.ts:    if (!user && !TEST_MODE) {",
        "app/api/blocked-time-slots/route.ts:    const TEST_MODE = process.env.TEST_MODE_NO_AUTH === \"true\"",
        "app/api/blocked-time-slots/route.ts:    if (!user && !TEST_MODE) {",
        "app/api/blocked-time-slots/[id]/route.ts:    const TEST_MODE = process.env.TEST_MODE_NO_AUTH === \"true\"",
        "app/api/blocked-time-slots/[id]/route.ts:    if (!user && !TEST_MODE) {",
        "app/api/blocked-time-slots/[id]/route.ts:    const TEST_MODE = process.env.TEST_MODE_NO_AUTH === \"true\"",
        "app/api/blocked-time-slots/[id]/route.ts:    if (!user && !TEST_MODE) {"
      ]
    }
  }
}